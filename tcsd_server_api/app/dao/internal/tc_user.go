// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// TcUserDao is the manager for logic model data accessing and custom defined data operations functions management.
type TcUserDao struct {
	gmvc.M                                      // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	C       tcUserColumns // C is the short type for Columns, which contains all the column names of Table for convenient usage.	
	DB      gdb.DB                              // DB is the raw underlying database management object.
	Table   string                              // Table is the underlying table name of the DAO.
}

// TcUserColumns defines and stores column names for table tc_user.
type tcUserColumns struct {
	Id             string //                                   
    Phone          string //                                   
    AvatarUrl      string //                                   
    Nickname       string //                                   
    Openid         string //                                   
    Unionid        string //                                   
    Gender         string //                                   
    CreateTime     string //                                   
    SessionKey     string //                                   
    LastLoginTime  string //                                   
    PostSum        string //                                   
    IsAnonymous    string // 是否匿名，默认：1-开放，2-匿名    
    IsSquare       string // 是否投放到广场，默认：1-是，2-否
}

// NewTcUserDao creates and returns a new DAO object for table data access.
func NewTcUserDao() *TcUserDao {
    columns := tcUserColumns{
		Id:            "id",               
            Phone:         "phone",            
            AvatarUrl:     "avatar_url",       
            Nickname:      "nickname",         
            Openid:        "openid",           
            Unionid:       "unionid",          
            Gender:        "gender",           
            CreateTime:    "create_time",      
            SessionKey:    "session_key",      
            LastLoginTime: "last_login_time",  
            PostSum:       "post_sum",         
            IsAnonymous:   "is_anonymous",     
            IsSquare:      "is_square",
	}
	return &TcUserDao{
		C: 	   columns,
		M:     g.DB("default").Model("tc_user").Safe(),
		DB:    g.DB("default"),
		Table: "tc_user",
	}
}